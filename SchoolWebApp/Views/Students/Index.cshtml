@model IEnumerable<Student>

@{
    ViewData["Title"] = "Students";
}


@* TODO: Make it a component *@
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger alert-dismissible show d-flex flex-column align-items-start" role="alert">
        <div>
            <span class="fa fa-exclamation-circle me-2" aria-hidden="true"></span>
            <strong>Error:</strong>
        </div>
        <ul class="mb-1">
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
        <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@foreach (var student in Model)
{
    <div class="card mb-3">
        <div class="card-body">
            <h5 class="card-title">@student.FirstName @student.LastName</h5>
            <p class="card-text">ID: @student.Id</p>
            <p class="card-text">@student.DateOfBirth.ToShortDateString()</p>
            <div class="d-flex">
                <a class="btn btn-warning me-2" asp-action="Edit" asp-route-id="@student.Id">Edit</a>
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@student.Id">Delete</a>
            </div>
        </div>
    </div>
}

<div class="d-flex">
    <a class="btn btn-success" asp-action="Create">Create</a>
</div>
